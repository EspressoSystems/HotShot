name: Build, Lint, and Test (self-hosted)

on:
  push:
    branches:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ (github.ref == 'refs/heads/main' && github.run_number) || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        just_variants:
          - async-std
          #- tokio
    runs-on: [self-hosted]
    container: ghcr.io/espressosystems/devops-rust:stable
    steps:
      - uses: dtolnay/rust-toolchain@stable
        name: Install Current Rust
        with:
          components: "clippy, rustfmt"

      - name: Install Cap'n'Proto
        run: |
          apt-get update
          apt-get install -y capnproto

      - uses: actions/checkout@v4
        name: Checkout Repository

      - uses: Swatinem/rust-cache@v2
        name: Enable Rust Caching
        with:
          prefix-key: ${{ matrix.just_variants }}

      - name: Build all crates in workspace
        run: just ${{ matrix.just_variants }} build

      - name: Build HotShot in release mode
        run: just ${{ matrix.just_variants }} build_release

      - name: Unit and integration tests for all crates in workspace
        run: |
          just ${{ matrix.just_variants }} test-ci
        timeout-minutes: 60
        env:
          RUST_BACKTRACE: full

  build-arm:
      strategy:
        matrix:
          just_variants:
            - async-std
      runs-on: [self-hosted, arm64]
      container: ghcr.io/espressosystems/devops-rust:stable
      steps:
        - uses: dtolnay/rust-toolchain@stable
          name: Install Current Rust
          with:
            components: "clippy, rustfmt"

        - name: Install Cap'n'Proto
          run: |
            apt-get update
            apt-get install -y capnproto

        - uses: actions/checkout@v4
          name: Checkout Repository

        - uses: Swatinem/rust-cache@v2
          name: Enable Rust Caching
          with:
            prefix-key: ${{ matrix.just_variants }}

        - name: Build all crates in workspace
          run: just ${{ matrix.just_variants }} build


        - name: Upload Binaries
          uses: actions/upload-artifact@v4
          with:
            name: binaries-aarch64-${{ matrix.just_variants }}
            path: |
              target/${{ matrix.just_variants }}/debug/examples/counter
              target/${{ matrix.just_variants }}/debug/examples/multi-validator-libp2p
              target/${{ matrix.just_variants }}/debug/examples/orchestrator-libp2p
              target/${{ matrix.just_variants }}/debug/examples/validator-libp2p
              target/${{ matrix.just_variants }}/debug/examples/multi-validator-webserver
              target/${{ matrix.just_variants }}/debug/examples/multi-webserver
              target/${{ matrix.just_variants }}/debug/examples/webserver
              target/${{ matrix.just_variants }}/debug/examples/orchestrator-webserver
              target/${{ matrix.just_variants }}/debug/examples/validator-webserver


