(function() {
    var type_impls = Object.fromEntries([["multi_validator_libp2p",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RunDa%3CTYPES,+Libp2pNetwork%3CTYPES%3E,+NODE,+V%3E-for-Libp2pDaRun%3CTYPES%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/multi_validator_libp2p/infra/mod.rs.html#680-773\">source</a><a href=\"#impl-RunDa%3CTYPES,+Libp2pNetwork%3CTYPES%3E,+NODE,+V%3E-for-Libp2pDaRun%3CTYPES%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TYPES: <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a>&lt;Transaction = <a class=\"struct\" href=\"hotshot_example_types/block_types/struct.TestTransaction.html\" title=\"struct hotshot_example_types::block_types::TestTransaction\">TestTransaction</a>, BlockPayload = <a class=\"struct\" href=\"hotshot_example_types/block_types/struct.TestBlockPayload.html\" title=\"struct hotshot_example_types::block_types::TestBlockPayload\">TestBlockPayload</a>, BlockHeader = <a class=\"struct\" href=\"hotshot_example_types/block_types/struct.TestBlockHeader.html\" title=\"struct hotshot_example_types::block_types::TestBlockHeader\">TestBlockHeader</a>, InstanceState = <a class=\"struct\" href=\"hotshot_example_types/state_types/struct.TestInstanceState.html\" title=\"struct hotshot_example_types::state_types::TestInstanceState\">TestInstanceState</a>&gt;, NODE: <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeImplementation.html\" title=\"trait hotshot_types::traits::node_implementation::NodeImplementation\">NodeImplementation</a>&lt;TYPES, Network = <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;TYPES&gt;, Storage = <a class=\"struct\" href=\"hotshot_example_types/storage_types/struct.TestStorage.html\" title=\"struct hotshot_example_types::storage_types::TestStorage\">TestStorage</a>&lt;TYPES&gt;, AuctionResultsProvider = <a class=\"struct\" href=\"hotshot_example_types/auction_results_provider_types/struct.TestAuctionResultsProvider.html\" title=\"struct hotshot_example_types::auction_results_provider_types::TestAuctionResultsProvider\">TestAuctionResultsProvider</a>&lt;TYPES&gt;&gt;, V: <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.Versions.html\" title=\"trait hotshot_types::traits::node_implementation::Versions\">Versions</a>&gt; <a class=\"trait\" href=\"multi_validator_libp2p/infra/trait.RunDa.html\" title=\"trait multi_validator_libp2p::infra::RunDa\">RunDa</a>&lt;TYPES, <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;TYPES&gt;, NODE, V&gt; for <a class=\"struct\" href=\"multi_validator_libp2p/infra/struct.Libp2pDaRun.html\" title=\"struct multi_validator_libp2p::infra::Libp2pDaRun\">Libp2pDaRun</a>&lt;TYPES&gt;<div class=\"where\">where\n    &lt;TYPES as <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html#associatedtype.ValidatedState\" title=\"type hotshot_types::traits::node_implementation::NodeType::ValidatedState\">ValidatedState</a>: <a class=\"trait\" href=\"hotshot_types/traits/states/trait.TestableState.html\" title=\"trait hotshot_types::traits::states::TestableState\">TestableState</a>&lt;TYPES&gt;,\n    &lt;TYPES as <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html#associatedtype.BlockPayload\" title=\"type hotshot_types::traits::node_implementation::NodeType::BlockPayload\">BlockPayload</a>: <a class=\"trait\" href=\"hotshot_types/traits/block_contents/trait.TestableBlock.html\" title=\"trait hotshot_types::traits::block_contents::TestableBlock\">TestableBlock</a>&lt;TYPES&gt;,\n    <a class=\"struct\" href=\"hotshot_types/data/struct.Leaf.html\" title=\"struct hotshot_types::data::Leaf\">Leaf</a>&lt;TYPES&gt;: <a class=\"trait\" href=\"hotshot_types/data/trait.TestableLeaf.html\" title=\"trait hotshot_types::data::TestableLeaf\">TestableLeaf</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize_networking\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/multi_validator_libp2p/infra/mod.rs.html#701-760\">source</a><a href=\"#method.initialize_networking\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"multi_validator_libp2p/infra/trait.RunDa.html#tymethod.initialize_networking\" class=\"fn\">initialize_networking</a>&lt;'life0, 'async_trait&gt;(\n    config: <a class=\"struct\" href=\"hotshot_types/network/struct.NetworkConfig.html\" title=\"struct hotshot_types::network::NetworkConfig\">NetworkConfig</a>&lt;TYPES::<a class=\"associatedtype\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html#associatedtype.SignatureKey\" title=\"type hotshot_types::traits::node_implementation::NodeType::SignatureKey\">SignatureKey</a>&gt;,\n    validator_config: <a class=\"struct\" href=\"hotshot_types/struct.ValidatorConfig.html\" title=\"struct hotshot_types::ValidatorConfig\">ValidatorConfig</a>&lt;TYPES::<a class=\"associatedtype\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html#associatedtype.SignatureKey\" title=\"type hotshot_types::traits::node_implementation::NodeType::SignatureKey\">SignatureKey</a>&gt;,\n    libp2p_advertise_address: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n    membership: &amp;'life0 <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;RwLock&lt;&lt;TYPES as <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html#associatedtype.Membership\" title=\"type hotshot_types::traits::node_implementation::NodeType::Membership\">Membership</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"multi_validator_libp2p/infra/struct.Libp2pDaRun.html\" title=\"struct multi_validator_libp2p::infra::Libp2pDaRun\">Libp2pDaRun</a>&lt;TYPES&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,</div></h4></section></summary><div class='docblock'>Initializes networking, returns self</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.network\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/multi_validator_libp2p/infra/mod.rs.html#762-764\">source</a><a href=\"#method.network\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"multi_validator_libp2p/infra/trait.RunDa.html#tymethod.network\" class=\"fn\">network</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;TYPES&gt;</h4></section></summary><div class='docblock'>Returns the underlying network for this run</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.config\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/multi_validator_libp2p/infra/mod.rs.html#766-768\">source</a><a href=\"#method.config\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"multi_validator_libp2p/infra/trait.RunDa.html#tymethod.config\" class=\"fn\">config</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hotshot_types/network/struct.NetworkConfig.html\" title=\"struct hotshot_types::network::NetworkConfig\">NetworkConfig</a>&lt;TYPES::<a class=\"associatedtype\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html#associatedtype.SignatureKey\" title=\"type hotshot_types::traits::node_implementation::NodeType::SignatureKey\">SignatureKey</a>&gt;</h4></section></summary><div class='docblock'>Returns the config for this run</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validator_config\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/multi_validator_libp2p/infra/mod.rs.html#770-772\">source</a><a href=\"#method.validator_config\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"multi_validator_libp2p/infra/trait.RunDa.html#tymethod.validator_config\" class=\"fn\">validator_config</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hotshot_types/struct.ValidatorConfig.html\" title=\"struct hotshot_types::ValidatorConfig\">ValidatorConfig</a>&lt;TYPES::<a class=\"associatedtype\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html#associatedtype.SignatureKey\" title=\"type hotshot_types::traits::node_implementation::NodeType::SignatureKey\">SignatureKey</a>&gt;</h4></section></summary><div class='docblock'>Returns the validator config with private signature keys for this run.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize_state_and_hotshot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/multi_validator_libp2p/infra/mod.rs.html#361-400\">source</a><a href=\"#method.initialize_state_and_hotshot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"multi_validator_libp2p/infra/trait.RunDa.html#method.initialize_state_and_hotshot\" class=\"fn\">initialize_state_and_hotshot</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    membership: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;RwLock&lt;&lt;TYPES as <a class=\"trait\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html\" title=\"trait hotshot_types::traits::node_implementation::NodeType\">NodeType</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/node_implementation/trait.NodeType.html#associatedtype.Membership\" title=\"type hotshot_types::traits::node_implementation::NodeType::Membership\">Membership</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"hotshot/types/handle/struct.SystemContextHandle.html\" title=\"struct hotshot::types::handle::SystemContextHandle\">SystemContextHandle</a>&lt;TYPES, NODE, V&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'async_trait,\n    'life0: 'async_trait,</div></h4></section></summary><div class='docblock'>Initializes the genesis state and HotShot instance; does not start HotShot consensus <a href=\"multi_validator_libp2p/infra/trait.RunDa.html#method.initialize_state_and_hotshot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_hotshot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/multi_validator_libp2p/infra/mod.rs.html#404-568\">source</a><a href=\"#method.run_hotshot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"multi_validator_libp2p/infra/trait.RunDa.html#method.run_hotshot\" class=\"fn\">run_hotshot</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    context: <a class=\"struct\" href=\"hotshot/types/handle/struct.SystemContextHandle.html\" title=\"struct hotshot::types::handle::SystemContextHandle\">SystemContextHandle</a>&lt;TYPES, NODE, V&gt;,\n    transactions: &amp;'life1 mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"hotshot_example_types/block_types/struct.TestTransaction.html\" title=\"struct hotshot_example_types::block_types::TestTransaction\">TestTransaction</a>&gt;,\n    transactions_to_send_per_round: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u64.html\">u64</a>,\n    transaction_size_in_bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"hotshot_orchestrator/client/struct.BenchResults.html\" title=\"struct hotshot_orchestrator::client::BenchResults\">BenchResults</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'async_trait,\n    'life0: 'async_trait,\n    'life1: 'async_trait,</div></h4></section></summary><div class='docblock'>Starts HotShot consensus, returns when consensus has finished</div></details></div></details>","RunDa<TYPES, Libp2pNetwork<TYPES>, NODE, V>","multi_validator_libp2p::types::ThisRun"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[15368]}